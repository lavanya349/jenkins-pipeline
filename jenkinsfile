// Jenkinsfile (Declarative Pipeline)

pipeline {
    // Defines where the pipeline will run. 'any' means any available agent.
    agent any

    // Environment variables for the pipeline
    environment {
        // Replace with your Docker Hub Username and Image Name
        DOCKER_IMAGE_NAME = "your_dockerhub_user/my-app" 
        // Credential ID from Step 2.3
        DOCKERHUB_CREDENTIALS = 'docker-hub-cred' 
    }

    stages {
        stage('Checkout Code') {
            steps {
                // Clones the source code from the configured repository
                checkout scm 
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Builds the image using the Dockerfile in the current directory
                    // Tags the image with the current build number
                    sh "docker build -t ${DOCKER_IMAGE_NAME}:${env.BUILD_NUMBER} ."
                    sh "docker tag ${DOCKER_IMAGE_NAME}:${env.BUILD_NUMBER} ${DOCKER_IMAGE_NAME}:latest"
                }
            }
        }

        stage('Run Unit Tests (Example)') {
            // This stage is a placeholder. You would typically run tests here.
            steps {
                sh 'echo "Running basic tests..."'
                // sh 'docker run --rm ${DOCKER_IMAGE_NAME}:${env.BUILD_NUMBER} npm test'
            }
        }

        stage('Push Docker Image') {
            steps {
                // Use the withCredentials block to securely use the Docker Hub credentials
                withCredentials([usernamePassword(credentialsId: DOCKERHUB_CREDENTIALS, 
                                                   usernameVariable: 'DOCKERHUB_USER', 
                                                   passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                    sh "echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USER} --password-stdin"
                    
                    // Push the build number tag
                    sh "docker push ${DOCKER_IMAGE_NAME}:${env.BUILD_NUMBER}"
                    
                    // Push the 'latest' tag
                    sh "docker push ${DOCKER_IMAGE_NAME}:latest"
                    
                    sh "docker logout"
                }
            }
        }
    }
}
